docker:
    network-name: "ethereum-testnet"
    ip-subnet: "10.0.20.0/24"
    volumes: ['./data:/data/', './:/source/']
    # for writing the docker-compose.yaml

files:
  # all files with respect to docker path
  testnet-root: '/data/'
  geth-genesis: "/data/geth-genesis.json"
  consensus-config: "/data/consensus-config.yaml"
  consensus-genesis: "/data/genesis.ssz"
  testnet-dir: "/data/local_testnet" # where client setups occur
  geth-bootstrap-dir: "/data/local_testnet/geth"
  docker-compose:  "/source/docker-compose.yaml" #wrt to docker config

  # this file is created when all testnet directories have been written.
  consensus-checkpoint: "/data/consensus-clients-ready"
  #this file is written with its time for the first execution client to come up.
  execution-checkpoint: "/data/execution-clients-ready"

config-params:
  
  deposit-contract-address: "0x8c594691c0e592ffa21f153a16ae41db5befcaaa"
  deposit-chain-id: 0x01000666
  deposit-network-id: 0x01000666

  # used for configuring geth genesis. placed in /data/eth1-genesis.json
  execution-layer:
    seconds-per-eth1-block: 14
    genesis-delay: 0
    genesis-config:
      chainId: 0x01000666
      homesteadBlock: 0
      eip150Block: 0
      eip155Block: 0
      eip158Block: 0
      byzantiumBlock: 0
      constantinopleBlock: 0
      petersburgBlock: 0
      istanbulBlock: 0
      berlinBlock: 0
      londonBlock: 0
      mergeForkBlock: 99 # (12 slot/sec * 8 slot/epoch * 12 fork epoch) / 14 secs per block + 224/14 (genesis delay).
      terminalTotalDifficulty: 201
    clique:
      enabled: True
      signer: "51Dd070D1f6f8dB48CA5b0E47D7e899aea6b1AF5"
      epoch: 3000
    terminal-block-hash: "0x0000000000000000000000000000000000000000000000000000000000000000"
    terminal-block-hash-activation-epoch: 18446744073709551615
  # used for generating the consensus config placed in /data/eth2-config.yaml
  consensus-layer:
    genesis-delay: 224 #lets the clients get to eth1-follow-distance
    preset-base: 'minimal'
    min-genesis-active-validator-count: 18 # custom preseeded into genesis state.

    forks:
      genesis-fork-version: 0x01000666
      genesis-fork-name: "phase0"
      end-fork-name: "bellatrix"

      phase0-fork-version: 0x01000666
      phase0-fork-epoch: 0 # genesis

      altair-fork-version: 0x02000666
      altair-fork-epoch: 6 # slot 48

      bellatrix-fork-version: 0x03000666
      bellatrix-fork-epoch: 12 # slot 96

      sharding-fork-version: 0x04000666
      sharding-fork-epoch: 18446744073709551615

accounts:
  eth1-account-mnemonic: "cat swing flag economy stadium alone churn speed unique patch report train"
  eth1-passphrase: "testnet-password"
  eth1-premine:
      "m/44'/60'/0'/0/0" : "100000000"
      "m/44'/60'/0'/0/1" : "100000000"
      "m/44'/60'/0'/0/2" : "100000000"
      "m/44'/60'/0'/0/3" : "100000000"

  validator-mnemonic: "ocean style run case glory clip into nature guess jacket document firm fiscal hello kite disagree symptom tide net coral envelope wink render festival" 
  withdrawl-mnemonic: "scatter supreme field crazy unveil chronic favorite middle front umbrella mutual gentle word wild economy dress whale whip method office report eternal garment parrot"

execution-clients:

  # the origianl node that starts the network.
  geth-bootstrapper:
    client-name: "geth-bootstrapper"
    ip-start: "10.0.20.2"
    image: "geth-client"
    tag: "latest"
    depends: "ethereum-testnet-bootstrapper"

    num-nodes: 1
    geth-data-dir: '/data/local_testnet/geth'
    debug: False
    network-id: 0x01000666
    chain-id: 0x01000666
    http-apis: "net,eth,web3,personal,engine"
    ws-apis: "net,eth,web3,personal,engine"
    http-port: 8645
    ws-port: 8646
    # script to execute
    entrypoint: "/source/apps/launchers/geth/launch-bellatrix-geth-clique.sh" #wrt to docker.
  #other exeucution clients here or with consensus launchers?

consensus-bootnodes:
  bootnode:
    # args for docker-compose
    client-name: "eth2-bootnode"
    container-name: "eth2-bootnode"
    image: "bootnode-clients"
    tag: "latest"
    ip-start: "10.0.20.201"
    entrypoint: "/source/apps/launchers/launch-eth2-bootnode.sh"
    num-nodes: 1
    # args for launcher script.
    private-key: "bc971f814d7bd37f7502cc67408c4f2c5a06e1b3d48dc041e42b5478154df1a8" # private key for the bootnode to use
    enr-udp: 9001 #port in the enr  
    api-port: 6000 # port for web api.
    bootnode-enr-file: "/data/local_testnet/bootnode/enr.dat"

consensus-clients:
  # nimbus nodes whose deposits were done pre-genesis
  nimbus-genesis-deposits:
    client-name: 'nimbus'
    # docker-compose
    image: "nimbus-client-minimal"
    tag: "kintsugi"
    container-name: "nimbus-client"
    entrypoint: "/source/apps/launchers/launch-nimbus.sh"
    ip-start: "10.0.20.10"
    depends: "geth-bootstrapper"
    # beacon/validator flags
    target-peers: 7
    debug-level: "debug"
    start-p2p-port: 4000
    start-rpc-port: 5000
    start-rest-port: 6000
    start-metric-port: 9000
    graffiti: "nimbus-client-"
    # testnet dir generation
    testnet-dir: '/data/local_testnet/nimbus'
    validator-offset-start: 0 # so validators of different clients don't overlap
    num-nodes: 2
    num-validators: 6
    # status-checker
    start-status-checker-port: 6000

  lighthouse-genesis-deposits:
    client-name: 'lighthouse'
    # docker-compose
    image: "lighthouse-client-minimal"
    tag: "stable"
    container-name: "lighthouse-client"
    entrypoint: "/source/apps/launchers/launch-lighthouse.sh"
    ip-start: "10.0.20.20"
    depends: "geth-bootstrapper"
    # beacon/validator flags
    target-peers: 7
    debug-level: "debug"
    start-p2p-port: 4000
    start-rest-port: 5000
    start-http-port: 6000
    start-metric-port: 9000
    graffiti: "lighthouse-client-"
    # testnet dir generation
    testnet-dir: '/data/local_testnet/lighthouse'
    validator-offset-start: 6 # so validators of different clients don't overlap
    num-nodes: 2
    num-validators: 6
    # status-checker
    start-status-checker-port: 6000

    # prysm-genesis-deposits:
    #   client-name: 'prysm'
    #   # docker-compose
    #   image: "prysm-client-minimal"
    #   tag: "develop"
    #   container-name: "prysm-client-minimal"
    #   entrypoint: "/source/apps/launchers/launch-prysm.sh"
    #   ip-start: "10.0.20.30"
    #   depends: "geth-bootstrapper"
    #   # beacon/validator flags
    #   debug-level: "trace"
    #   start-rpc-port: 3000
    #   start-p2p-port: 4000
    #   start-rest-port: 5000
    #   start-http-port: 6000
    #   start-grpc-port: 7000
    #   start-validator-metrics-port: 8000
    #   start-metric-port: 9000
    #   graffiti: "prysm-client-"
    #   # testnet dir generation
    #   testnet-dir: '/data/local_testnet/prysm'
    #   wallet-path: '/data/local_testnet/prysm/wallet-password.txt'
    #   validator-password: "testnet-password"
    #   validator-offset-start: 8 # so validators of different clients don't overlap
    #   num-nodes: 2
    #   num-validators: 4
    #   # status checker
    #   start-status-checker-port: 7000

  teku-genesis-deposits:
    client-name: 'teku'
    # docker-compose
    image: "teku-client"
    tag: "master"
    container-name: "teku-client"
    entrypoint: "/source/apps/launchers/launch-teku.sh"
    ip-start: "10.0.20.40"
    depends: "geth-bootstrapper"
    # beacon/validator flags
    debug-level: "debug"
    start-p2p-port: 4000
    start-rest-port: 5000
    start-http-port: 6000
    # testnet dir generation
    testnet-dir: '/data/local_testnet/teku'
    validator-offset-start: 12 # so validators of different clients don't overlap
    num-nodes: 2
    num-validators: 6

    start-status-checker-port: 5000

# special case client that is the ethereum-testnet-bootstrapper
# this allows you to create a new genesis everytime you call 
# docker-compose up
testnet-bootstrapper:
  ethereum-testnet-bootstrapper:
    #docker-compose
    image: "ethereum-testnet-bootstrapper"
    tag: "latest"
    container-name: "testnet-bootstrapper"
    ip-start: "10.0.20.202"
    config-file: '/configs/minimal/multi/multi-phase0-bellatrix.yaml'

generic-modules:
  health-checker:
    client-name: "health-checker"
    image: "ethereum-testnet-bootstrapper"
    tag: "latest"
    container-name: "health-checker"
    ip-start: "10.0.20.206"
    num-nodes: 1
    entrypoint: "python3 /source/apps/status-check.py --config /configs/minimal/multi/multi-phase0-bellatrix.yaml --phase0-slot 36 --experiment-slot 46 --phase1-slot 46 --phase2-slot 52 --genesis-delay 224 --number-of-checks 2"

  deposit-deployer:
    client-name: "deposit-deployer"
    image: "ethereum-testnet-bootstrapper"
    tag: "latest"
    container-name: "deposit-deployer"
    ip-start: "10.0.20.207"
    num-nodes: 1
    entrypoint: "python3 /source/apps/deploy-contract-deposits.py --config /configs/minimal/multi/multi-phase0-bellatrix.yaml --start-offset 16 --num-deposits 4 --num-transactions 4 --delay-per-transaction 30 --geth-ipc data/local_testnet/geth/geth.ipc"
